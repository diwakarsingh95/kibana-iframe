{"version":3,"sources":["components/Login.js","App.js","reportWebVitals.js","amplify-config.js","index.js","components/Home.js","components/Kibana.js"],"names":["Login","history","useEffect","Auth","currentAuthenticatedUser","bypassCache","then","user","localStorage","setItem","JSON","stringify","push","catch","err","console","log","login","removeItem","federatedSignIn","style","textAlign","App","className","exact","path","component","Home","Kibana","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","region","userPoolId","process","userPoolWebClientId","oauth","domain","scope","redirectSignIn","REACT_APP_REDIRECT_SIGNIN","redirectSignOut","REACT_APP_REDIRECT_SIGNOUT","responseType","Amplify","configure","config","ReactDOM","render","StrictMode","document","getElementById","onClick","signOut","global","url","width","height","id","display","position"],"mappings":"+OA4BeA,EAzBD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACfC,qBAAU,WACRC,IAAKC,yBAAyB,CAAEC,aAAa,IAC1CC,MAAK,SAACC,GACLC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUJ,IAChDN,EAAQW,KAAK,YAEdC,OAAM,SAACC,GACNC,QAAQC,IAAI,oCAAqCF,GACjDG,SAEH,IAEH,IAAMA,EAAQ,WACZT,aAAaU,WAAW,YACxBf,IAAKgB,mBAGP,OACE,qBAAKC,MAAO,CAAEC,UAAW,UAAzB,SACE,gDCJSC,MAdf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1B,IACjC,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,QAAQC,UAAWC,MACrC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWE,cCAlCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QC2BC3B,EA1BF,CAEXkC,OAAQ,YAGRC,WAbiBC,sBAgBjBC,oBAf0BD,6BAkB1BE,MAAO,CACLC,OAlBeH,+CAmBfI,MAAO,CACL,QACA,QACA,UACA,SACA,iCAEFC,eAxBFL,yVAAYM,2BAA6B,yBAyBvCC,gBAvBFP,yVAAYQ,4BAA8B,yBAwBxCC,aAAc,SCtBlBC,UAAQC,UAAUC,GAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B3B,K,iCCpBA,oCAceF,IAXF,SAAC,GAAiB,IAAf1B,EAAc,EAAdA,QAEd,OACE,sBAAKmB,MAAO,CAAEC,UAAW,UAAzB,UACE,sCACA,wBAAQoC,QAAS,kBAAMxD,EAAQW,KAAK,YAApC,0BAFF,OAGE,wBAAQ6C,QAAS,kBAAMtD,IAAKuD,QAAQ,CAAEC,YAAtC,0B,mDCTN,4CAsBe/B,IAlBA,WACb,OACE,sBAAKR,MAAO,CAAEC,UAAW,UAAzB,UACE,wCACA,wBAAQoC,QAAS,kBAAMtD,IAAKuD,QAAQ,CAAEC,YAAtC,oBACA,cAAC,IAAD,CACEC,IAAI,wEACJC,MAAM,OACNC,OAAO,OACPC,GAAG,eACHxC,UAAU,eACVyC,QAAQ,UACRC,SAAS,mB","file":"static/js/main.abe7da85.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { Auth } from 'aws-amplify'\n\nconst Login = ({ history }) => {\n  useEffect(() => {\n    Auth.currentAuthenticatedUser({ bypassCache: true })\n      .then((user) => {\n        localStorage.setItem('userInfo', JSON.stringify(user))\n        history.push('/home')\n      })\n      .catch((err) => {\n        console.log('currentAuthenticatedUser Error:  ', err)\n        login()\n      })\n  }, [])\n\n  const login = () => {\n    localStorage.removeItem('userInfo')\n    Auth.federatedSignIn()\n  }\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h3>Loading....</h3>\n    </div>\n  )\n}\n\nexport default Login\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from './components/Home'\nimport Kibana from './components/Kibana'\nimport Login from './components/Login'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Login} />\n          <Route exact path='/home' component={Home} />\n          <Route exact path='/kibana' component={Kibana} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const userPoolId = process.env.REACT_APP_COGNITO_USER_POOL_ID\nconst userPoolWebClientId = process.env.REACT_APP_COGNITO_USER_POOL_WEBCLIENT_ID\nconst authDomain = process.env.REACT_APP_COGNITO_AUTH_DOMAIN\nconst redirectSignIn =\n  process.env.REACT_APP_REDIRECT_SIGNIN || 'http://localhost:3000/'\nconst redirectSignOut =\n  process.env.REACT_APP_REDIRECT_SIGNOUT || 'http://localhost:3000/'\n\nconst Auth = {\n  // REQUIRED - Amazon Cognito Region\n  region: 'us-east-1',\n\n  // OPTIONAL - Amazon Cognito User Pool ID\n  userPoolId: userPoolId,\n\n  // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n  userPoolWebClientId: userPoolWebClientId,\n\n  // OPTIONAL - Hosted UI configuration\n  oauth: {\n    domain: authDomain,\n    scope: [\n      'phone',\n      'email',\n      'profile',\n      'openid',\n      'aws.cognito.signin.user.admin',\n    ],\n    redirectSignIn: redirectSignIn,\n    redirectSignOut: redirectSignOut,\n    responseType: 'code', // or 'token', note that REFRESH token will only be generated when the responseType is code\n  },\n}\n\nexport default Auth\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport Amplify from 'aws-amplify'\nimport config from './amplify-config'\nAmplify.configure(config)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import React from 'react'\nimport { Auth } from 'aws-amplify'\n\nconst Home = ({ history }) => {\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>Home</h1>\n      <button onClick={() => history.push('/kibana')}>Go to Kibana</button>&nbsp;\n      <button onClick={() => Auth.signOut({ global })}>Logout</button>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react'\nimport { Auth } from 'aws-amplify'\nimport Iframe from 'react-iframe'\n\nconst Kibana = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>Kibana</h1>\n      <button onClick={() => Auth.signOut({ global })}>Logout</button>\n      <Iframe\n        url='https://4d980065475c44f5b3dded9798abb265.us-east-1.aws.found.io:9243/'\n        width='100%'\n        height='100%'\n        id='kibanaIframe'\n        className='kibanaIframe'\n        display='initial'\n        position='relative'\n      />\n    </div>\n  )\n}\n\nexport default Kibana\n"],"sourceRoot":""}